{"version":3,"file":"js/204.7186d992.js","mappings":"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","sources":["webpack://boop.boo/./src/components/NelnetConverter.vue","webpack://boop.boo/./src/components/NelnetConverter.vue?adf7","webpack://boop.boo/./node_modules/core-js/internals/classof.js","webpack://boop.boo/./node_modules/core-js/internals/define-built-in-accessor.js","webpack://boop.boo/./node_modules/core-js/internals/to-string-tag-support.js","webpack://boop.boo/./node_modules/core-js/internals/to-string.js","webpack://boop.boo/./node_modules/core-js/internals/validate-arguments-length.js","webpack://boop.boo/./node_modules/core-js/modules/web.url-search-params.delete.js","webpack://boop.boo/./node_modules/core-js/modules/web.url-search-params.has.js","webpack://boop.boo/./node_modules/core-js/modules/web.url-search-params.size.js"],"sourcesContent":["<template>\n  <div class=\"nelnet-converter\">\n    <div class=\"converter-card\">\n      <h1 class=\"converter-title\">Nelnet to Monarch Money Converter</h1>\n      <p class=\"converter-subtitle\">\n        Transform your Nelnet payment history for Monarch Money import\n      </p>\n\n      <!-- Account Mapping Section -->\n      <div class=\"mapping-section\">\n        <h2 class=\"section-title\">Step 1: Configure Account Mappings</h2>\n        <p class=\"section-description\">\n          Map your Nelnet group codes to Monarch Money account names\n        </p>\n\n        <div class=\"mappings-grid\">\n          <div\n            v-for=\"(mapping, index) in accountMappings\"\n            :key=\"index\"\n            class=\"mapping-row\"\n          >\n            <input\n              v-model=\"mapping.group\"\n              placeholder=\"Group (e.g., AA)\"\n              class=\"input-group\"\n            />\n            <input\n              v-model=\"mapping.account\"\n              placeholder=\"Monarch Account Name\"\n              class=\"input-account\"\n            />\n            <button @click=\"removeMapping(index)\" class=\"btn-remove\">✕</button>\n          </div>\n        </div>\n\n        <div class=\"mapping-actions\">\n          <button @click=\"addMapping\" class=\"btn btn-primary\">\n            + Add Mapping\n          </button>\n\n          <button @click=\"saveToLocalStorage\" class=\"btn btn-success\">\n            💾 Save Mappings\n          </button>\n\n          <button @click=\"exportMappings\" class=\"btn btn-export\">\n            📤 Export Preset\n          </button>\n\n          <button @click=\"triggerImport\" class=\"btn btn-import\">\n            📥 Import Preset\n          </button>\n\n          <input\n            ref=\"importInput\"\n            type=\"file\"\n            accept=\".json\"\n            style=\"display: none\"\n            @change=\"importMappings\"\n          />\n        </div>\n      </div>\n\n      <!-- Input Section -->\n      <div class=\"input-section\">\n        <h2 class=\"section-title\">Step 2: Paste Nelnet Payment Data</h2>\n        <textarea\n          v-model=\"inputData\"\n          @paste=\"handlePaste\"\n          placeholder=\"Paste your Nelnet payment history here...\"\n          class=\"data-input\"\n        ></textarea>\n      </div>\n\n      <!-- Process Button -->\n      <div class=\"process-section\">\n        <button @click=\"processData\" class=\"btn btn-process\">\n          🔄 Transform Data\n        </button>\n\n        <select v-model=\"outputFormat\" class=\"format-select\">\n          <option value=\"csv\">CSV Format (Single File)</option>\n          <option value=\"zip\">CSV per Account (Zipped)</option>\n          <option value=\"json\">JSON Format</option>\n        </select>\n      </div>\n\n      <!-- Output Section -->\n      <div v-if=\"outputData\" class=\"output-section\">\n        <div class=\"output-header\">\n          <h2 class=\"section-title\">Step 3: Copy Transformed Data</h2>\n          <div class=\"output-actions\">\n            <button @click=\"copyToClipboard\" class=\"btn btn-copy\">\n              📋 Copy to Clipboard\n            </button>\n            <button @click=\"downloadFile\" class=\"btn btn-download\">\n              💾 Download File\n            </button>\n          </div>\n        </div>\n\n        <div class=\"output-display\">\n          <pre>{{ outputData }}</pre>\n        </div>\n      </div>\n\n      <!-- Summary Section -->\n      <div v-if=\"summary\" class=\"summary-section\">\n        <h3 class=\"summary-title\">Summary</h3>\n        <div class=\"summary-grid\">\n          <div class=\"summary-item\">\n            <span class=\"summary-label\">Payment Date:</span> {{ summary.date }}\n          </div>\n          <div class=\"summary-item\">\n            <span class=\"summary-label\">Total Payment:</span> ${{\n              summary.total\n            }}\n          </div>\n          <div class=\"summary-item\">\n            <span class=\"summary-label\">Principal:</span> ${{\n              summary.principal\n            }}\n          </div>\n          <div class=\"summary-item\">\n            <span class=\"summary-label\">Interest:</span> ${{ summary.interest }}\n          </div>\n        </div>\n        <div class=\"summary-count\">\n          <span class=\"summary-label\">Transactions Created:</span>\n          {{ summary.transactionCount }}\n        </div>\n      </div>\n\n      <!-- Status Messages -->\n      <div\n        v-if=\"statusMessage\"\n        :class=\"[\n          'status-message',\n          statusType === 'success' ? 'status-success' : 'status-error',\n        ]\"\n      >\n        {{ statusMessage }}\n      </div>\n    </div>\n\n    <!-- Instructions (optional - can be toggled) -->\n    <div v-if=\"showInstructions\" class=\"instructions-card\">\n      <h2 class=\"instructions-title\">Instructions</h2>\n      <ol class=\"instructions-list\">\n        <li>\n          <strong>Configure Mappings:</strong> Set up the mapping between Nelnet\n          group codes (AA, AB, etc.) and your Monarch Money account names\n        </li>\n        <li>\n          <strong>Paste Data:</strong> Copy the payment history from Nelnet and\n          paste it into the input area\n        </li>\n        <li>\n          <strong>Transform:</strong> Click Transform Data to convert to Monarch\n          Money format\n        </li>\n        <li>\n          <strong>Import:</strong> Copy the transformed data and import it into\n          Monarch Money as transactions\n        </li>\n      </ol>\n\n      <div class=\"notes-section\">\n        <h3 class=\"notes-title\">📝 Notes:</h3>\n        <ul class=\"notes-list\">\n          <li>\n            The CSV format includes separate transactions for principal and\n            interest payments\n          </li>\n          <li>Account mappings are saved locally in your browser</li>\n          <li>Date format is MM/DD/YYYY for Monarch Money compatibility</li>\n          <li>\n            Negative amounts indicate money leaving your account (payments)\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"NelnetMonarchConverter\",\n\n  props: {\n    showInstructions: {\n      type: Boolean,\n      default: true,\n    },\n    storageKey: {\n      type: String,\n      default: \"nelnetMappings\",\n    },\n    defaultMappings: {\n      type: Array,\n      default: () => [\n        { group: \"AA\", account: \"6.800% - E******6206-AA-1\" },\n        { group: \"AB\", account: \"5.600% - E******6206-AB-2\" },\n        { group: \"AC\", account: \"6.800% - E******6206-AC-3\" },\n        { group: \"AD\", account: \"4.500% - E******6206-AD-4\" },\n        { group: \"AE\", account: \"6.800% - E******6206-AE-5\" },\n        { group: \"AF\", account: \"4.500% - E******6206-AF-6\" },\n        { group: \"AG\", account: \"6.800% - E******6206-AG-7\" },\n        { group: \"AH\", account: \"3.400% - E******6206-AH-8\" },\n      ],\n    },\n  },\n\n  data() {\n    return {\n      inputData: \"\",\n      outputData: \"\",\n      outputFormat: \"csv\",\n      accountMappings: [],\n      summary: null,\n      statusMessage: \"\",\n      statusType: \"success\",\n      zipBlob: null,\n    };\n  },\n\n  mounted() {\n    this.loadMappings();\n  },\n\n  methods: {\n    loadMappings() {\n      const saved = localStorage.getItem(this.storageKey);\n      if (saved) {\n        try {\n          this.accountMappings = JSON.parse(saved);\n        } catch (e) {\n          console.error(\"Failed to load mappings:\", e);\n          this.accountMappings = [...this.defaultMappings];\n        }\n      } else {\n        this.accountMappings = [...this.defaultMappings];\n      }\n    },\n\n    handlePaste() {\n      setTimeout(() => {\n        this.processData();\n      }, 100);\n    },\n\n    addMapping() {\n      this.accountMappings.push({ group: \"\", account: \"\" });\n    },\n\n    removeMapping(index) {\n      this.accountMappings.splice(index, 1);\n    },\n\n    saveToLocalStorage() {\n      try {\n        localStorage.setItem(\n          this.storageKey,\n          JSON.stringify(this.accountMappings)\n        );\n        this.showStatus(\"Mappings saved successfully!\", \"success\");\n        this.$emit(\"mappings-saved\", this.accountMappings);\n      } catch (e) {\n        console.error(\"Failed to save mappings:\", e);\n        this.showStatus(\"Failed to save mappings\", \"error\");\n      }\n    },\n\n    exportMappings() {\n      try {\n        const dataStr = JSON.stringify(this.accountMappings, null, 2);\n        const blob = new Blob([dataStr], { type: \"application/json\" });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `nelnet-mappings-${\n          new Date().toISOString().split(\"T\")[0]\n        }.json`;\n        a.click();\n        URL.revokeObjectURL(url);\n        this.showStatus(\"Mappings exported successfully!\", \"success\");\n        this.$emit(\"mappings-exported\", this.accountMappings);\n      } catch (e) {\n        console.error(\"Failed to export mappings:\", e);\n        this.showStatus(\"Failed to export mappings\", \"error\");\n      }\n    },\n\n    triggerImport() {\n      this.$refs.importInput.click();\n    },\n\n    importMappings(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const importedMappings = JSON.parse(e.target.result);\n\n          // Validate the imported data\n          if (!Array.isArray(importedMappings)) {\n            throw new Error(\"Invalid format: Expected an array of mappings\");\n          }\n\n          // Validate each mapping has required fields\n          const isValid = importedMappings.every(\n            (mapping) =>\n              mapping &&\n              typeof mapping === \"object\" &&\n              \"group\" in mapping &&\n              \"account\" in mapping\n          );\n\n          if (!isValid) {\n            throw new Error(\n              \"Invalid format: Each mapping must have 'group' and 'account' fields\"\n            );\n          }\n\n          this.accountMappings = importedMappings;\n          this.showStatus(\n            `Successfully imported ${importedMappings.length} mappings!`,\n            \"success\"\n          );\n          this.$emit(\"mappings-imported\", this.accountMappings);\n\n          // Optionally auto-save to localStorage\n          this.saveToLocalStorage();\n        } catch (error) {\n          console.error(\"Failed to import mappings:\", error);\n          this.showStatus(`Failed to import: ${error.message}`, \"error\");\n        } finally {\n          // Reset the input so the same file can be imported again\n          event.target.value = \"\";\n        }\n      };\n\n      reader.onerror = () => {\n        this.showStatus(\"Failed to read file\", \"error\");\n        event.target.value = \"\";\n      };\n\n      reader.readAsText(file);\n    },\n\n    async processData() {\n      try {\n        if (!this.inputData.trim()) {\n          this.showStatus(\"Please paste Nelnet payment data first\", \"error\");\n          return;\n        }\n\n        const lines = this.inputData.trim().split(\"\\n\");\n        let paymentDate = \"\";\n        let paymentAmount = \"\";\n        const transactions = [];\n\n        for (let i = 0; i < lines.length; i++) {\n          const line = lines[i].trim();\n\n          if (line.startsWith(\"Payment Date:\")) {\n            paymentDate = line.split(\":\")[1].trim();\n          } else if (line.startsWith(\"Payment Amount:\")) {\n            paymentAmount = line.split(\"$\")[1].trim();\n          } else if (\n            line &&\n            !line.startsWith(\"Group\") &&\n            !line.startsWith(\"Total\") &&\n            !line.includes(\"Applied to\") &&\n            !line.includes(\"Payment History\") &&\n            !line.startsWith(\"Account:\")\n          ) {\n            const parts = line.split(\"\\t\");\n            if (parts.length >= 5) {\n              const group = parts[0].trim();\n              const principal = parts[2].replace(\"$\", \"\").trim();\n              const interest = parts[3].replace(\"$\", \"\").trim();\n\n              const mapping = this.accountMappings.find(\n                (m) => m.group === group\n              );\n              const accountName = mapping\n                ? mapping.account\n                : `Nelnet - ${group}`;\n\n              if (parseFloat(principal) > 0) {\n                transactions.push({\n                  date: paymentDate,\n                  account: accountName,\n                  category: \"Loan Principal\",\n                  description: `Nelnet ${group} - Principal Payment`,\n                  amount: -parseFloat(principal),\n                  type: \"Principal\",\n                });\n              }\n\n              if (parseFloat(interest) > 0) {\n                transactions.push({\n                  date: paymentDate,\n                  account: accountName,\n                  category: \"Interest\",\n                  description: `Nelnet ${group} - Interest Payment`,\n                  amount: -parseFloat(interest),\n                  type: \"Interest\",\n                });\n              }\n            }\n          }\n        }\n\n        if (transactions.length === 0) {\n          this.showStatus(\n            \"No valid transactions found. Please check the input format.\",\n            \"error\"\n          );\n          return;\n        }\n\n        if (this.outputFormat === \"csv\") {\n          this.outputData = this.generateCSV(transactions);\n        } else if (this.outputFormat === \"zip\") {\n          await this.generateZippedCSVs(transactions);\n          // Generate a preview of all the CSVs that will be in the zip\n          const accountGroups = {};\n          transactions.forEach((t) => {\n            if (!accountGroups[t.account]) {\n              accountGroups[t.account] = [];\n            }\n            accountGroups[t.account].push(t);\n          });\n\n          let preview = \"Preview of files in zip:\\n\\n\";\n          Object.keys(accountGroups).forEach((accountName) => {\n            const safeFileName = accountName\n              .replace(/[^a-z0-9]/gi, \"_\")\n              .toLowerCase();\n            preview += `=== ${safeFileName}.csv ===\\n`;\n            preview += this.generateSimpleCSV(accountGroups[accountName]);\n            preview += \"\\n\\n\";\n          });\n          this.outputData = preview;\n        } else {\n          this.outputData = JSON.stringify(transactions, null, 2);\n        }\n\n        const totalPrincipal = transactions\n          .filter((t) => t.type === \"Principal\")\n          .reduce((sum, t) => sum + Math.abs(t.amount), 0);\n        const totalInterest = transactions\n          .filter((t) => t.type === \"Interest\")\n          .reduce((sum, t) => sum + Math.abs(t.amount), 0);\n\n        this.summary = {\n          date: paymentDate,\n          total: paymentAmount,\n          principal: totalPrincipal.toFixed(2),\n          interest: totalInterest.toFixed(2),\n          transactionCount: transactions.length,\n        };\n\n        this.showStatus(\"Data transformed successfully!\", \"success\");\n\n        this.$emit(\"data-processed\", {\n          transactions,\n          summary: this.summary,\n          format: this.outputFormat,\n          output: this.outputData,\n        });\n      } catch (error) {\n        this.showStatus(\"Error processing data: \" + error.message, \"error\");\n        this.$emit(\"processing-error\", error);\n      }\n    },\n\n    formatDateToYYYYMMDD(dateString) {\n      // Parse the date string (handles formats like MM/DD/YYYY or other formats)\n      const date = new Date(dateString);\n\n      // Check if date is valid\n      if (isNaN(date.getTime())) {\n        return dateString; // Return original if can't parse\n      }\n\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\n      const day = String(date.getDate()).padStart(2, \"0\");\n\n      return `${year}-${month}-${day}`;\n    },\n\n    async loadJSZip() {\n      return new Promise((resolve, reject) => {\n        if (window.JSZip) {\n          resolve();\n          return;\n        }\n        const script = document.createElement(\"script\");\n        script.src =\n          \"https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js\";\n        script.onload = resolve;\n        script.onerror = reject;\n        document.head.appendChild(script);\n      });\n    },\n\n    async generateZippedCSVs(transactions) {\n      // Load JSZip if not already loaded\n      await this.loadJSZip();\n\n      // Group transactions by account\n      const accountGroups = {};\n      transactions.forEach((t) => {\n        if (!accountGroups[t.account]) {\n          accountGroups[t.account] = [];\n        }\n        accountGroups[t.account].push(t);\n      });\n\n      // Create a zip file\n      const zip = new window.JSZip();\n\n      // Generate CSV for each account\n      Object.keys(accountGroups).forEach((accountName) => {\n        const accountTransactions = accountGroups[accountName];\n        const csvContent = this.generateSimpleCSV(accountTransactions);\n\n        // Sanitize filename\n        const safeFileName = accountName\n          .replace(/[^a-z0-9]/gi, \"_\")\n          .toLowerCase();\n        zip.file(`${safeFileName}.csv`, csvContent);\n      });\n\n      // Store the zip for download\n      this.zipBlob = await zip.generateAsync({ type: \"blob\" });\n    },\n\n    generateSimpleCSV(transactions) {\n      const headers = [\n        \"Date\",\n        \"Merchant\",\n        \"Category\",\n        \"Account\",\n        \"Original Statement\",\n        \"Notes\",\n        \"Amount\",\n        \"Tags\",\n      ];\n\n      // Sort by date (newest first if you want descending order)\n      const sorted = [...transactions].sort((a, b) => {\n        const dateA = new Date(a.date);\n        const dateB = new Date(b.date);\n        return dateB - dateA; // Descending order (newest first)\n      });\n\n      const rows = sorted.map((t) => [\n        this.formatDateToYYYYMMDD(t.date),\n        \"Nelnet\", // Merchant\n        t.category, // Category (Interest or Loan Principal)\n        t.account, // Account name\n        t.description, // Original Statement\n        \"\", // Notes (empty)\n        t.amount.toFixed(2), // Amount (already negative for payments)\n        \"\", // Tags (empty)\n      ]);\n\n      const csvContent = [\n        headers.join(\",\"),\n        ...rows.map((row) => row.map((cell) => `\"${cell}\"`).join(\",\")),\n      ].join(\"\\n\");\n\n      return csvContent;\n    },\n\n    generateCSV(transactions) {\n      const headers = [\"Date\", \"Account\", \"Category\", \"Description\", \"Amount\"];\n      const rows = transactions.map((t) => [\n        t.date,\n        t.account,\n        t.category,\n        t.description,\n        t.amount.toFixed(2),\n      ]);\n\n      const csvContent = [\n        headers.join(\",\"),\n        ...rows.map((row) => row.map((cell) => `\"${cell}\"`).join(\",\")),\n      ].join(\"\\n\");\n\n      return csvContent;\n    },\n\n    async copyToClipboard() {\n      try {\n        await navigator.clipboard.writeText(this.outputData);\n        this.showStatus(\"Copied to clipboard!\", \"success\");\n        this.$emit(\"data-copied\", this.outputData);\n      } catch (error) {\n        console.error(\"Failed to copy:\", error);\n        this.showStatus(\"Failed to copy to clipboard\", \"error\");\n      }\n    },\n\n    downloadFile() {\n      if (this.outputFormat === \"zip\" && this.zipBlob) {\n        const url = URL.createObjectURL(this.zipBlob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `nelnet_payments_by_account_${\n          new Date().toISOString().split(\"T\")[0]\n        }.zip`;\n        a.click();\n        URL.revokeObjectURL(url);\n        this.showStatus(\"Zip file downloaded!\", \"success\");\n        this.$emit(\"file-downloaded\", {\n          extension: \"zip\",\n          data: \"zipped files\",\n        });\n        return;\n      }\n\n      const extension = this.outputFormat === \"csv\" ? \"csv\" : \"json\";\n      const mimeType =\n        this.outputFormat === \"csv\" ? \"text/csv\" : \"application/json\";\n      const blob = new Blob([this.outputData], { type: mimeType });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `nelnet_payment_${\n        new Date().toISOString().split(\"T\")[0]\n      }.${extension}`;\n      a.click();\n      URL.revokeObjectURL(url);\n      this.showStatus(\"File downloaded!\", \"success\");\n      this.$emit(\"file-downloaded\", { extension, data: this.outputData });\n    },\n\n    showStatus(message, type) {\n      this.statusMessage = message;\n      this.statusType = type;\n      setTimeout(() => {\n        this.statusMessage = \"\";\n      }, 3000);\n    },\n\n    clearData() {\n      this.inputData = \"\";\n      this.outputData = \"\";\n      this.summary = null;\n    },\n\n    setInputData(data) {\n      this.inputData = data;\n    },\n\n    getMappings() {\n      return this.accountMappings;\n    },\n\n    setMappings(mappings) {\n      this.accountMappings = mappings;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.nelnet-converter {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.converter-card,\n.instructions-card {\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  padding: 24px;\n  margin-bottom: 24px;\n}\n\n.converter-title {\n  font-size: 28px;\n  font-weight: bold;\n  color: #2563eb;\n  margin-bottom: 8px;\n}\n\n.converter-subtitle {\n  color: #6b7280;\n  margin-bottom: 24px;\n}\n\n.section-title {\n  font-size: 20px;\n  font-weight: 600;\n  color: #1f2937;\n  margin-bottom: 12px;\n}\n\n.section-description {\n  font-size: 14px;\n  color: #6b7280;\n  margin-bottom: 16px;\n}\n\n.mapping-section {\n  background: #eff6ff;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 24px;\n}\n\n.mapping-section .section-title {\n  color: #1e40af;\n}\n\n.mappings-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 12px;\n  margin-bottom: 12px;\n}\n\n.mapping-row {\n  display: flex;\n  gap: 8px;\n}\n\n.input-group {\n  width: 80px;\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n}\n\n.input-account {\n  flex: 1;\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n}\n\n.input-group:focus,\n.input-account:focus {\n  outline: none;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.btn-remove {\n  padding: 8px 12px;\n  background: #ef4444;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.btn-remove:hover {\n  background: #dc2626;\n}\n\n.mapping-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.input-section {\n  margin-bottom: 24px;\n}\n\n.data-input {\n  width: 100%;\n  min-height: 250px;\n  padding: 12px 16px;\n  border: 2px solid #e5e7eb;\n  border-radius: 8px;\n  font-family: monospace;\n  font-size: 13px;\n  resize: vertical;\n  box-sizing: border-box;\n}\n\n.data-input:focus {\n  outline: none;\n  border-color: #3b82f6;\n}\n\n.process-section {\n  display: flex;\n  gap: 12px;\n  margin-bottom: 24px;\n}\n\n.format-select {\n  padding: 12px 16px;\n  border: 2px solid #e5e7eb;\n  border-radius: 8px;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.format-select:focus {\n  outline: none;\n  border-color: #3b82f6;\n}\n\n.output-section {\n  margin-bottom: 24px;\n}\n\n.output-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.output-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.output-display {\n  background: #f9fafb;\n  border: 2px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 16px;\n  max-height: 400px;\n  overflow: auto;\n}\n\n.output-display pre {\n  margin: 0;\n  font-size: 13px;\n  font-family: monospace;\n  white-space: pre;\n  word-break: normal;\n  overflow-x: auto;\n  color: black;\n}\n\n.summary-section {\n  background: #f0fdf4;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 16px;\n  color: black;\n}\n\n.summary-title {\n  font-size: 18px;\n  font-weight: 600;\n  color: #166534;\n  margin-bottom: 12px;\n}\n\n.summary-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 16px;\n  margin-bottom: 12px;\n}\n\n.summary-item,\n.summary-count {\n  font-size: 14px;\n}\n\n.summary-label {\n  font-weight: 600;\n  color: #166534;\n}\n\n.status-message {\n  padding: 16px;\n  border-radius: 8px;\n  margin-top: 16px;\n  font-size: 14px;\n}\n\n.status-success {\n  background: #f0fdf4;\n  color: #166534;\n}\n\n.status-error {\n  background: #fef2f2;\n  color: #991b1b;\n}\n\n.instructions-title {\n  font-size: 24px;\n  font-weight: bold;\n  color: #1f2937;\n  margin-bottom: 16px;\n}\n\n.instructions-list {\n  list-style-type: decimal;\n  padding-left: 20px;\n  color: #4b5563;\n  line-height: 1.8;\n}\n\n.instructions-list li {\n  margin-bottom: 8px;\n}\n\n.notes-section {\n  background: #fef3c7;\n  border: 1px solid #fbbf24;\n  border-radius: 8px;\n  padding: 16px;\n  margin-top: 24px;\n}\n\n.notes-title {\n  font-weight: 600;\n  color: #92400e;\n  margin-bottom: 8px;\n}\n\n.notes-list {\n  list-style-type: disc;\n  padding-left: 20px;\n  font-size: 14px;\n  color: #4b5563;\n  line-height: 1.6;\n}\n\n.notes-list li {\n  margin-bottom: 4px;\n}\n\n.btn {\n  padding: 10px 18px;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 14px;\n}\n\n.btn-primary {\n  background: #3b82f6;\n  color: white;\n}\n\n.btn-primary:hover {\n  background: #2563eb;\n}\n\n.btn-success {\n  background: #10b981;\n  color: white;\n}\n\n.btn-success:hover {\n  background: #059669;\n}\n\n.btn-export {\n  background: #f59e0b;\n  color: white;\n}\n\n.btn-export:hover {\n  background: #d97706;\n}\n\n.btn-import {\n  background: #06b6d4;\n  color: white;\n}\n\n.btn-import:hover {\n  background: #0891b2;\n}\n\n.btn-process {\n  background: #4f46e5;\n  color: white;\n  font-weight: 600;\n  padding: 12px 24px;\n}\n\n.btn-process:hover {\n  background: #4338ca;\n}\n\n.btn-copy {\n  background: #10b981;\n  color: white;\n}\n\n.btn-copy:hover {\n  background: #059669;\n}\n\n.btn-download {\n  background: #8b5cf6;\n  color: white;\n}\n\n.btn-download:hover {\n  background: #7c3aed;\n}\n\n@media (max-width: 768px) {\n  .mappings-grid {\n    grid-template-columns: 1fr;\n  }\n\n  .summary-grid {\n    grid-template-columns: 1fr;\n  }\n\n  .output-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 12px;\n  }\n\n  .output-actions {\n    width: 100%;\n  }\n\n  .output-actions .btn {\n    flex: 1;\n  }\n}\n</style>\n","import { render } from \"./NelnetConverter.vue?vue&type=template&id=2b3f26fd&scoped=true\"\nimport script from \"./NelnetConverter.vue?vue&type=script&lang=js\"\nexport * from \"./NelnetConverter.vue?vue&type=script&lang=js\"\n\nimport \"./NelnetConverter.vue?vue&type=style&index=0&id=2b3f26fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2b3f26fd\"]])\n\nexport default __exports__","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","'use strict';\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar append = uncurryThis(URLSearchParamsPrototype.append);\nvar $delete = uncurryThis(URLSearchParamsPrototype['delete']);\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\nvar push = uncurryThis([].push);\nvar params = new $URLSearchParams('a=1&a=2&b=3');\n\nparams['delete']('a', 1);\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nparams['delete']('b', undefined);\n\nif (params + '' !== 'a=2') {\n  defineBuiltIn(URLSearchParamsPrototype, 'delete', function (name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $delete(this, name);\n    var entries = [];\n    forEach(this, function (v, k) { // also validates `this`\n      push(entries, { key: k, value: v });\n    });\n    validateArgumentsLength(length, 1);\n    var key = toString(name);\n    var value = toString($value);\n    var index = 0;\n    var dindex = 0;\n    var found = false;\n    var entriesLength = entries.length;\n    var entry;\n    while (index < entriesLength) {\n      entry = entries[index++];\n      if (found || entry.key === key) {\n        found = true;\n        $delete(this, entry.key);\n      } else dindex++;\n    }\n    while (dindex < entriesLength) {\n      entry = entries[dindex++];\n      if (!(entry.key === key && entry.value === value)) append(this, entry.key, entry.value);\n    }\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar getAll = uncurryThis(URLSearchParamsPrototype.getAll);\nvar $has = uncurryThis(URLSearchParamsPrototype.has);\nvar params = new $URLSearchParams('a=1');\n\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nif (params.has('a', 2) || !params.has('a', undefined)) {\n  defineBuiltIn(URLSearchParamsPrototype, 'has', function has(name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $has(this, name);\n    var values = getAll(this, name); // also validates `this`\n    validateArgumentsLength(length, 1);\n    var value = toString($value);\n    var index = 0;\n    while (index < values.length) {\n      if (values[index++] === value) return true;\n    } return false;\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\n\nvar URLSearchParamsPrototype = URLSearchParams.prototype;\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\n\n// `URLSearchParams.prototype.size` getter\n// https://github.com/whatwg/url/pull/734\nif (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {\n  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {\n    get: function size() {\n      var count = 0;\n      forEach(this, function () { count++; });\n      return count;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n"],"names":["class","_createElementVNode","value","_hoisted_16","_hoisted_17","_hoisted_18","key","_createStaticVNode","_hoisted_39","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_Fragment","_renderList","$data","accountMappings","mapping","index","$event","group","placeholder","_hoisted_9","account","_hoisted_10","onClick","$options","removeMapping","_hoisted_11","_hoisted_12","_cache","args","addMapping","saveToLocalStorage","exportMappings","triggerImport","ref","type","accept","style","onChange","importMappings","_hoisted_13","_hoisted_14","inputData","onPaste","handlePaste","_hoisted_15","processData","outputFormat","_hoisted_19","outputData","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","copyToClipboard","downloadFile","_hoisted_24","_toDisplayString","_createCommentVNode","summary","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_createTextVNode","date","_hoisted_30","_hoisted_31","total","_hoisted_32","_hoisted_33","principal","_hoisted_34","_hoisted_35","interest","_hoisted_36","_hoisted_37","transactionCount","statusMessage","_normalizeClass","statusType","$props","showInstructions","_hoisted_38","_hoisted_42","name","props","Boolean","default","storageKey","String","defaultMappings","Array","data","zipBlob","mounted","this","loadMappings","methods","saved","localStorage","getItem","JSON","parse","e","console","error","setTimeout","push","splice","setItem","stringify","showStatus","$emit","dataStr","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","Date","toISOString","split","click","revokeObjectURL","$refs","importInput","event","file","target","files","reader","FileReader","onload","importedMappings","result","isArray","Error","isValid","every","length","message","onerror","readAsText","trim","lines","paymentDate","paymentAmount","transactions","i","line","startsWith","includes","parts","replace","find","m","accountName","parseFloat","category","description","amount","generateCSV","generateZippedCSVs","accountGroups","forEach","t","preview","Object","keys","safeFileName","toLowerCase","generateSimpleCSV","totalPrincipal","filter","reduce","sum","Math","abs","totalInterest","toFixed","format","output","formatDateToYYYYMMDD","dateString","isNaN","getTime","year","getFullYear","month","getMonth","padStart","day","getDate","loadJSZip","Promise","resolve","reject","window","JSZip","script","src","head","appendChild","zip","accountTransactions","csvContent","generateAsync","headers","sorted","sort","b","dateA","dateB","rows","map","join","row","cell","navigator","clipboard","writeText","extension","mimeType","clearData","setInputData","getMappings","setMappings","mappings","__exports__","render","TO_STRING_TAG_SUPPORT","isCallable","classofRaw","wellKnownSymbol","TO_STRING_TAG","$Object","CORRECT_ARGUMENTS","arguments","tryGet","it","module","exports","O","tag","undefined","callee","makeBuiltIn","defineProperty","descriptor","get","getter","set","setter","f","test","classof","$String","argument","TypeError","$TypeError","passed","required","defineBuiltIn","uncurryThis","toString","validateArgumentsLength","$URLSearchParams","URLSearchParams","URLSearchParamsPrototype","prototype","append","$delete","params","$value","entries","v","k","entry","dindex","found","entriesLength","enumerable","unsafe","getAll","$has","has","values","DESCRIPTORS","defineBuiltInAccessor","count","configurable"],"sourceRoot":""}