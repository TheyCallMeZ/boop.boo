"use strict";(self["webpackChunkboop_boo"]=self["webpackChunkboop_boo"]||[]).push([[204],{9204:function(t,a,e){e.r(a),e.d(a,{default:function(){return K}});var s=e(6768),o=e(5130),n=e(4232);const i=t=>((0,s.Qi)("data-v-2b3f26fd"),t=t(),(0,s.jt)(),t),r={class:"nelnet-converter"},c={class:"converter-card"},p=i((()=>(0,s.Lk)("h1",{class:"converter-title"},"Nelnet to Monarch Money Converter",-1))),u=i((()=>(0,s.Lk)("p",{class:"converter-subtitle"}," Transform your Nelnet payment history for Monarch Money import ",-1))),l={class:"mapping-section"},d=i((()=>(0,s.Lk)("h2",{class:"section-title"},"Step 1: Configure Account Mappings",-1))),m=i((()=>(0,s.Lk)("p",{class:"section-description"}," Map your Nelnet group codes to Monarch Money account names ",-1))),h={class:"mappings-grid"},g=["onUpdate:modelValue"],f=["onUpdate:modelValue"],y=["onClick"],v={class:"mapping-actions"},b={class:"input-section"},k=i((()=>(0,s.Lk)("h2",{class:"section-title"},"Step 2: Paste Nelnet Payment Data",-1))),S={class:"process-section"},M=i((()=>(0,s.Lk)("option",{value:"csv"},"CSV Format (Single File)",-1))),w=i((()=>(0,s.Lk)("option",{value:"zip"},"CSV per Account (Zipped)",-1))),L=i((()=>(0,s.Lk)("option",{value:"json"},"JSON Format",-1))),C=[M,w,L],D={key:0,class:"output-section"},A={class:"output-header"},F=i((()=>(0,s.Lk)("h2",{class:"section-title"},"Step 3: Copy Transformed Data",-1))),E={class:"output-actions"},T={class:"output-display"},$={key:1,class:"summary-section"},j=i((()=>(0,s.Lk)("h3",{class:"summary-title"},"Summary",-1))),P={class:"summary-grid"},N={class:"summary-item"},x=i((()=>(0,s.Lk)("span",{class:"summary-label"},"Payment Date:",-1))),I={class:"summary-item"},U=i((()=>(0,s.Lk)("span",{class:"summary-label"},"Total Payment:",-1))),O={class:"summary-item"},z=i((()=>(0,s.Lk)("span",{class:"summary-label"},"Principal:",-1))),_={class:"summary-item"},R=i((()=>(0,s.Lk)("span",{class:"summary-label"},"Interest:",-1))),V={class:"summary-count"},J=i((()=>(0,s.Lk)("span",{class:"summary-label"},"Transactions Created:",-1))),Y={key:0,class:"instructions-card"},B=(0,s.Fv)('<h2 class="instructions-title" data-v-2b3f26fd>Instructions</h2><ol class="instructions-list" data-v-2b3f26fd><li data-v-2b3f26fd><strong data-v-2b3f26fd>Configure Mappings:</strong> Set up the mapping between Nelnet group codes (AA, AB, etc.) and your Monarch Money account names </li><li data-v-2b3f26fd><strong data-v-2b3f26fd>Paste Data:</strong> Copy the payment history from Nelnet and paste it into the input area </li><li data-v-2b3f26fd><strong data-v-2b3f26fd>Transform:</strong> Click Transform Data to convert to Monarch Money format </li><li data-v-2b3f26fd><strong data-v-2b3f26fd>Import:</strong> Copy the transformed data and import it into Monarch Money as transactions </li></ol><div class="notes-section" data-v-2b3f26fd><h3 class="notes-title" data-v-2b3f26fd>üìù Notes:</h3><ul class="notes-list" data-v-2b3f26fd><li data-v-2b3f26fd> The CSV format includes separate transactions for principal and interest payments </li><li data-v-2b3f26fd>Account mappings are saved locally in your browser</li><li data-v-2b3f26fd>Date format is MM/DD/YYYY for Monarch Money compatibility</li><li data-v-2b3f26fd> Negative amounts indicate money leaving your account (payments) </li></ul></div>',3),W=[B];function Z(t,a,e,i,M,w){return(0,s.uX)(),(0,s.CE)("div",r,[(0,s.Lk)("div",c,[p,u,(0,s.Lk)("div",l,[d,m,(0,s.Lk)("div",h,[((0,s.uX)(!0),(0,s.CE)(s.FK,null,(0,s.pI)(M.accountMappings,((t,a)=>((0,s.uX)(),(0,s.CE)("div",{key:a,class:"mapping-row"},[(0,s.bo)((0,s.Lk)("input",{"onUpdate:modelValue":a=>t.group=a,placeholder:"Group (e.g., AA)",class:"input-group"},null,8,g),[[o.Jo,t.group]]),(0,s.bo)((0,s.Lk)("input",{"onUpdate:modelValue":a=>t.account=a,placeholder:"Monarch Account Name",class:"input-account"},null,8,f),[[o.Jo,t.account]]),(0,s.Lk)("button",{onClick:t=>w.removeMapping(a),class:"btn-remove"},"‚úï",8,y)])))),128))]),(0,s.Lk)("div",v,[(0,s.Lk)("button",{onClick:a[0]||(a[0]=(...t)=>w.addMapping&&w.addMapping(...t)),class:"btn btn-primary"}," + Add Mapping "),(0,s.Lk)("button",{onClick:a[1]||(a[1]=(...t)=>w.saveToLocalStorage&&w.saveToLocalStorage(...t)),class:"btn btn-success"}," üíæ Save Mappings "),(0,s.Lk)("button",{onClick:a[2]||(a[2]=(...t)=>w.exportMappings&&w.exportMappings(...t)),class:"btn btn-export"}," üì§ Export Preset "),(0,s.Lk)("button",{onClick:a[3]||(a[3]=(...t)=>w.triggerImport&&w.triggerImport(...t)),class:"btn btn-import"}," üì• Import Preset "),(0,s.Lk)("input",{ref:"importInput",type:"file",accept:".json",style:{display:"none"},onChange:a[4]||(a[4]=(...t)=>w.importMappings&&w.importMappings(...t))},null,544)])]),(0,s.Lk)("div",b,[k,(0,s.bo)((0,s.Lk)("textarea",{"onUpdate:modelValue":a[5]||(a[5]=t=>M.inputData=t),onPaste:a[6]||(a[6]=(...t)=>w.handlePaste&&w.handlePaste(...t)),placeholder:"Paste your Nelnet payment history here...",class:"data-input"},null,544),[[o.Jo,M.inputData]])]),(0,s.Lk)("div",S,[(0,s.Lk)("button",{onClick:a[7]||(a[7]=(...t)=>w.processData&&w.processData(...t)),class:"btn btn-process"}," üîÑ Transform Data "),(0,s.bo)((0,s.Lk)("select",{"onUpdate:modelValue":a[8]||(a[8]=t=>M.outputFormat=t),class:"format-select"},C,512),[[o.u1,M.outputFormat]])]),M.outputData?((0,s.uX)(),(0,s.CE)("div",D,[(0,s.Lk)("div",A,[F,(0,s.Lk)("div",E,[(0,s.Lk)("button",{onClick:a[9]||(a[9]=(...t)=>w.copyToClipboard&&w.copyToClipboard(...t)),class:"btn btn-copy"}," üìã Copy to Clipboard "),(0,s.Lk)("button",{onClick:a[10]||(a[10]=(...t)=>w.downloadFile&&w.downloadFile(...t)),class:"btn btn-download"}," üíæ Download File ")])]),(0,s.Lk)("div",T,[(0,s.Lk)("pre",null,(0,n.v_)(M.outputData),1)])])):(0,s.Q3)("",!0),M.summary?((0,s.uX)(),(0,s.CE)("div",$,[j,(0,s.Lk)("div",P,[(0,s.Lk)("div",N,[x,(0,s.eW)(" "+(0,n.v_)(M.summary.date),1)]),(0,s.Lk)("div",I,[U,(0,s.eW)(" $"+(0,n.v_)(M.summary.total),1)]),(0,s.Lk)("div",O,[z,(0,s.eW)(" $"+(0,n.v_)(M.summary.principal),1)]),(0,s.Lk)("div",_,[R,(0,s.eW)(" $"+(0,n.v_)(M.summary.interest),1)])]),(0,s.Lk)("div",V,[J,(0,s.eW)(" "+(0,n.v_)(M.summary.transactionCount),1)])])):(0,s.Q3)("",!0),M.statusMessage?((0,s.uX)(),(0,s.CE)("div",{key:2,class:(0,n.C4)(["status-message","success"===M.statusType?"status-success":"status-error"])},(0,n.v_)(M.statusMessage),3)):(0,s.Q3)("",!0)]),e.showInstructions?((0,s.uX)(),(0,s.CE)("div",Y,W)):(0,s.Q3)("",!0)])}e(4114),e(4603),e(7566),e(8721);var X={name:"NelnetMonarchConverter",props:{showInstructions:{type:Boolean,default:!0},storageKey:{type:String,default:"nelnetMappings"},defaultMappings:{type:Array,default:()=>[{group:"AA",account:"6.800% - E******6206-AA-1"},{group:"AB",account:"5.600% - E******6206-AB-2"},{group:"AC",account:"6.800% - E******6206-AC-3"},{group:"AD",account:"4.500% - E******6206-AD-4"},{group:"AE",account:"6.800% - E******6206-AE-5"},{group:"AF",account:"4.500% - E******6206-AF-6"},{group:"AG",account:"6.800% - E******6206-AG-7"},{group:"AH",account:"3.400% - E******6206-AH-8"}]}},data(){return{inputData:"",outputData:"",outputFormat:"csv",accountMappings:[],summary:null,statusMessage:"",statusType:"success",zipBlob:null}},mounted(){this.loadMappings()},methods:{loadMappings(){const t=localStorage.getItem(this.storageKey);if(t)try{this.accountMappings=JSON.parse(t)}catch(a){console.error("Failed to load mappings:",a),this.accountMappings=[...this.defaultMappings]}else this.accountMappings=[...this.defaultMappings]},handlePaste(){setTimeout((()=>{this.processData()}),100)},addMapping(){this.accountMappings.push({group:"",account:""})},removeMapping(t){this.accountMappings.splice(t,1)},saveToLocalStorage(){try{localStorage.setItem(this.storageKey,JSON.stringify(this.accountMappings)),this.showStatus("Mappings saved successfully!","success"),this.$emit("mappings-saved",this.accountMappings)}catch(t){console.error("Failed to save mappings:",t),this.showStatus("Failed to save mappings","error")}},exportMappings(){try{const t=JSON.stringify(this.accountMappings,null,2),a=new Blob([t],{type:"application/json"}),e=URL.createObjectURL(a),s=document.createElement("a");s.href=e,s.download=`nelnet-mappings-${(new Date).toISOString().split("T")[0]}.json`,s.click(),URL.revokeObjectURL(e),this.showStatus("Mappings exported successfully!","success"),this.$emit("mappings-exported",this.accountMappings)}catch(t){console.error("Failed to export mappings:",t),this.showStatus("Failed to export mappings","error")}},triggerImport(){this.$refs.importInput.click()},importMappings(t){const a=t.target.files[0];if(!a)return;const e=new FileReader;e.onload=a=>{try{const t=JSON.parse(a.target.result);if(!Array.isArray(t))throw new Error("Invalid format: Expected an array of mappings");const e=t.every((t=>t&&"object"===typeof t&&"group"in t&&"account"in t));if(!e)throw new Error("Invalid format: Each mapping must have 'group' and 'account' fields");this.accountMappings=t,this.showStatus(`Successfully imported ${t.length} mappings!`,"success"),this.$emit("mappings-imported",this.accountMappings),this.saveToLocalStorage()}catch(e){console.error("Failed to import mappings:",e),this.showStatus(`Failed to import: ${e.message}`,"error")}finally{t.target.value=""}},e.onerror=()=>{this.showStatus("Failed to read file","error"),t.target.value=""},e.readAsText(a)},async processData(){try{if(!this.inputData.trim())return void this.showStatus("Please paste Nelnet payment data first","error");const t=this.inputData.trim().split("\n");let a="",e="";const s=[];for(let i=0;i<t.length;i++){const o=t[i].trim();if(o.startsWith("Payment Date:"))a=o.split(":")[1].trim();else if(o.startsWith("Payment Amount:"))e=o.split("$")[1].trim();else if(o&&!o.startsWith("Group")&&!o.startsWith("Total")&&!o.includes("Applied to")&&!o.includes("Payment History")&&!o.startsWith("Account:")){const t=o.split("\t");if(t.length>=5){const e=t[0].trim(),o=t[2].replace("$","").trim(),n=t[3].replace("$","").trim(),i=this.accountMappings.find((t=>t.group===e)),r=i?i.account:`Nelnet - ${e}`;parseFloat(o)>0&&s.push({date:a,account:r,category:"Loan Principal",description:`Nelnet ${e} - Principal Payment`,amount:-parseFloat(o),type:"Principal"}),parseFloat(n)>0&&s.push({date:a,account:r,category:"Interest",description:`Nelnet ${e} - Interest Payment`,amount:-parseFloat(n),type:"Interest"})}}}if(0===s.length)return void this.showStatus("No valid transactions found. Please check the input format.","error");if("csv"===this.outputFormat)this.outputData=this.generateCSV(s);else if("zip"===this.outputFormat){await this.generateZippedCSVs(s);const t={};s.forEach((a=>{t[a.account]||(t[a.account]=[]),t[a.account].push(a)}));let a="Preview of files in zip:\n\n";Object.keys(t).forEach((e=>{const s=e.replace(/[^a-z0-9]/gi,"_").toLowerCase();a+=`=== ${s}.csv ===\n`,a+=this.generateSimpleCSV(t[e]),a+="\n\n"})),this.outputData=a}else this.outputData=JSON.stringify(s,null,2);const o=s.filter((t=>"Principal"===t.type)).reduce(((t,a)=>t+Math.abs(a.amount)),0),n=s.filter((t=>"Interest"===t.type)).reduce(((t,a)=>t+Math.abs(a.amount)),0);this.summary={date:a,total:e,principal:o.toFixed(2),interest:n.toFixed(2),transactionCount:s.length},this.showStatus("Data transformed successfully!","success"),this.$emit("data-processed",{transactions:s,summary:this.summary,format:this.outputFormat,output:this.outputData})}catch(t){this.showStatus("Error processing data: "+t.message,"error"),this.$emit("processing-error",t)}},formatDateToYYYYMMDD(t){const a=new Date(t);if(isNaN(a.getTime()))return t;const e=a.getFullYear(),s=String(a.getMonth()+1).padStart(2,"0"),o=String(a.getDate()).padStart(2,"0");return`${e}-${s}-${o}`},async loadJSZip(){return new Promise(((t,a)=>{if(window.JSZip)return void t();const e=document.createElement("script");e.src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js",e.onload=t,e.onerror=a,document.head.appendChild(e)}))},async generateZippedCSVs(t){await this.loadJSZip();const a={};t.forEach((t=>{a[t.account]||(a[t.account]=[]),a[t.account].push(t)}));const e=new window.JSZip;Object.keys(a).forEach((t=>{const s=a[t],o=this.generateSimpleCSV(s),n=t.replace(/[^a-z0-9]/gi,"_").toLowerCase();e.file(`${n}.csv`,o)})),this.zipBlob=await e.generateAsync({type:"blob"})},generateSimpleCSV(t){const a=["Date","Merchant","Category","Account","Original Statement","Notes","Amount","Tags"],e=[...t].sort(((t,a)=>{const e=new Date(t.date),s=new Date(a.date);return s-e})),s=e.map((t=>[this.formatDateToYYYYMMDD(t.date),"Nelnet",t.category,t.account,t.description,"",t.amount.toFixed(2),""])),o=[a.join(","),...s.map((t=>t.map((t=>`"${t}"`)).join(",")))].join("\n");return o},generateCSV(t){const a=["Date","Account","Category","Description","Amount"],e=t.map((t=>[t.date,t.account,t.category,t.description,t.amount.toFixed(2)])),s=[a.join(","),...e.map((t=>t.map((t=>`"${t}"`)).join(",")))].join("\n");return s},async copyToClipboard(){try{await navigator.clipboard.writeText(this.outputData),this.showStatus("Copied to clipboard!","success"),this.$emit("data-copied",this.outputData)}catch(t){console.error("Failed to copy:",t),this.showStatus("Failed to copy to clipboard","error")}},downloadFile(){if("zip"===this.outputFormat&&this.zipBlob){const t=URL.createObjectURL(this.zipBlob),a=document.createElement("a");return a.href=t,a.download=`nelnet_payments_by_account_${(new Date).toISOString().split("T")[0]}.zip`,a.click(),URL.revokeObjectURL(t),this.showStatus("Zip file downloaded!","success"),void this.$emit("file-downloaded",{extension:"zip",data:"zipped files"})}const t="csv"===this.outputFormat?"csv":"json",a="csv"===this.outputFormat?"text/csv":"application/json",e=new Blob([this.outputData],{type:a}),s=URL.createObjectURL(e),o=document.createElement("a");o.href=s,o.download=`nelnet_payment_${(new Date).toISOString().split("T")[0]}.${t}`,o.click(),URL.revokeObjectURL(s),this.showStatus("File downloaded!","success"),this.$emit("file-downloaded",{extension:t,data:this.outputData})},showStatus(t,a){this.statusMessage=t,this.statusType=a,setTimeout((()=>{this.statusMessage=""}),3e3)},clearData(){this.inputData="",this.outputData="",this.summary=null},setInputData(t){this.inputData=t},getMappings(){return this.accountMappings},setMappings(t){this.accountMappings=t}}},Q=e(1241);const G=(0,Q.A)(X,[["render",Z],["__scopeId","data-v-2b3f26fd"]]);var K=G},6955:function(t,a,e){var s=e(2140),o=e(4901),n=e(4576),i=e(8227),r=i("toStringTag"),c=Object,p="Arguments"===n(function(){return arguments}()),u=function(t,a){try{return t[a]}catch(e){}};t.exports=s?n:function(t){var a,e,s;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(e=u(a=c(t),r))?e:p?n(a):"Object"===(s=n(a))&&o(a.callee)?"Arguments":s}},2106:function(t,a,e){var s=e(283),o=e(4913);t.exports=function(t,a,e){return e.get&&s(e.get,a,{getter:!0}),e.set&&s(e.set,a,{setter:!0}),o.f(t,a,e)}},2140:function(t,a,e){var s=e(8227),o=s("toStringTag"),n={};n[o]="z",t.exports="[object z]"===String(n)},655:function(t,a,e){var s=e(6955),o=String;t.exports=function(t){if("Symbol"===s(t))throw new TypeError("Cannot convert a Symbol value to a string");return o(t)}},2812:function(t){var a=TypeError;t.exports=function(t,e){if(t<e)throw new a("Not enough arguments");return t}},4603:function(t,a,e){var s=e(6840),o=e(9504),n=e(655),i=e(2812),r=URLSearchParams,c=r.prototype,p=o(c.append),u=o(c["delete"]),l=o(c.forEach),d=o([].push),m=new r("a=1&a=2&b=3");m["delete"]("a",1),m["delete"]("b",void 0),m+""!=="a=2"&&s(c,"delete",(function(t){var a=arguments.length,e=a<2?void 0:arguments[1];if(a&&void 0===e)return u(this,t);var s=[];l(this,(function(t,a){d(s,{key:a,value:t})})),i(a,1);var o,r=n(t),c=n(e),m=0,h=0,g=!1,f=s.length;while(m<f)o=s[m++],g||o.key===r?(g=!0,u(this,o.key)):h++;while(h<f)o=s[h++],o.key===r&&o.value===c||p(this,o.key,o.value)}),{enumerable:!0,unsafe:!0})},7566:function(t,a,e){var s=e(6840),o=e(9504),n=e(655),i=e(2812),r=URLSearchParams,c=r.prototype,p=o(c.getAll),u=o(c.has),l=new r("a=1");!l.has("a",2)&&l.has("a",void 0)||s(c,"has",(function(t){var a=arguments.length,e=a<2?void 0:arguments[1];if(a&&void 0===e)return u(this,t);var s=p(this,t);i(a,1);var o=n(e),r=0;while(r<s.length)if(s[r++]===o)return!0;return!1}),{enumerable:!0,unsafe:!0})},8721:function(t,a,e){var s=e(3724),o=e(9504),n=e(2106),i=URLSearchParams.prototype,r=o(i.forEach);s&&!("size"in i)&&n(i,"size",{get:function(){var t=0;return r(this,(function(){t++})),t},configurable:!0,enumerable:!0})}}]);
//# sourceMappingURL=204.7186d992.js.map